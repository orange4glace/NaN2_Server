  






// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.
   
#pragma once


#include "ctf_mod_s2c_common.h"

     
namespace CTFModS2C {


	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool Snapshot ( ::Proud::HostID, ::Proud::RmiContext& , const nan2::module::ctf_module::Snapshot  & )		{ 
			return false;
		} 

#define DECRMI_CTFModS2C_Snapshot bool Snapshot ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const nan2::module::ctf_module::Snapshot  & snapshot) PN_OVERRIDE

#define DEFRMI_CTFModS2C_Snapshot(DerivedClass) bool DerivedClass::Snapshot ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const nan2::module::ctf_module::Snapshot  & snapshot)
#define CALL_CTFModS2C_Snapshot Snapshot ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const nan2::module::ctf_module::Snapshot  & snapshot)
#define PARAM_CTFModS2C_Snapshot ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const nan2::module::ctf_module::Snapshot  & snapshot)
               
		virtual bool FlagCaptured ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::HostID  & )		{ 
			return false;
		} 

#define DECRMI_CTFModS2C_FlagCaptured bool FlagCaptured ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::HostID  & player_id) PN_OVERRIDE

#define DEFRMI_CTFModS2C_FlagCaptured(DerivedClass) bool DerivedClass::FlagCaptured ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::HostID  & player_id)
#define CALL_CTFModS2C_FlagCaptured FlagCaptured ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::HostID  & player_id)
#define PARAM_CTFModS2C_FlagCaptured ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::HostID  & player_id)
               
		virtual bool FlagDropped ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::HostID  & , const float  & , const float  & )		{ 
			return false;
		} 

#define DECRMI_CTFModS2C_FlagDropped bool FlagDropped ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::HostID  & player_id, const float  & pos_x, const float  & pos_y) PN_OVERRIDE

#define DEFRMI_CTFModS2C_FlagDropped(DerivedClass) bool DerivedClass::FlagDropped ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::HostID  & player_id, const float  & pos_x, const float  & pos_y)
#define CALL_CTFModS2C_FlagDropped FlagDropped ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::HostID  & player_id, const float  & pos_x, const float  & pos_y)
#define PARAM_CTFModS2C_FlagDropped ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::HostID  & player_id, const float  & pos_x, const float  & pos_y)
               
		virtual bool FlagReturned ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::HostID  & )		{ 
			return false;
		} 

#define DECRMI_CTFModS2C_FlagReturned bool FlagReturned ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::HostID  & player_id) PN_OVERRIDE

#define DEFRMI_CTFModS2C_FlagReturned(DerivedClass) bool DerivedClass::FlagReturned ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::HostID  & player_id)
#define CALL_CTFModS2C_FlagReturned FlagReturned ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::HostID  & player_id)
#define PARAM_CTFModS2C_FlagReturned ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::HostID  & player_id)
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_Snapshot;
		static const PNTCHAR* RmiName_FlagCaptured;
		static const PNTCHAR* RmiName_FlagDropped;
		static const PNTCHAR* RmiName_FlagReturned;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const nan2::module::ctf_module::Snapshot  & ) > Snapshot_Function;
		virtual bool Snapshot ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const nan2::module::ctf_module::Snapshot  & snapshot) 
		{ 
			if (Snapshot_Function==nullptr) 
				return true; 
			return Snapshot_Function(remote,rmiContext, snapshot); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::HostID  & ) > FlagCaptured_Function;
		virtual bool FlagCaptured ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::HostID  & player_id) 
		{ 
			if (FlagCaptured_Function==nullptr) 
				return true; 
			return FlagCaptured_Function(remote,rmiContext, player_id); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::HostID  & , const float  & , const float  & ) > FlagDropped_Function;
		virtual bool FlagDropped ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::HostID  & player_id, const float  & pos_x, const float  & pos_y) 
		{ 
			if (FlagDropped_Function==nullptr) 
				return true; 
			return FlagDropped_Function(remote,rmiContext, player_id, pos_x, pos_y); 
		}

               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const Proud::HostID  & ) > FlagReturned_Function;
		virtual bool FlagReturned ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const Proud::HostID  & player_id) 
		{ 
			if (FlagReturned_Function==nullptr) 
				return true; 
			return FlagReturned_Function(remote,rmiContext, player_id); 
		}

	};
#endif

}


