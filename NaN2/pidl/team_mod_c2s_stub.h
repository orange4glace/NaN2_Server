  






// Generated by PIDL compiler.
// Do not modify this file, but modify the source .pidl file.
   
#pragma once


#include "team_mod_c2s_common.h"

     
namespace TeamModC2S {


	class Stub : public ::Proud::IRmiStub
	{
	public:
               
		virtual bool JoinTeam ( ::Proud::HostID, ::Proud::RmiContext& , const int  & )		{ 
			return false;
		} 

#define DECRMI_TeamModC2S_JoinTeam bool JoinTeam ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & team) PN_OVERRIDE

#define DEFRMI_TeamModC2S_JoinTeam(DerivedClass) bool DerivedClass::JoinTeam ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & team)
#define CALL_TeamModC2S_JoinTeam JoinTeam ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & team)
#define PARAM_TeamModC2S_JoinTeam ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & team)
 
		virtual bool ProcessReceivedMessage(::Proud::CReceivedMessage &pa, void* hostTag) PN_OVERRIDE;
		static const PNTCHAR* RmiName_JoinTeam;
		static const PNTCHAR* RmiName_First;
		virtual ::Proud::RmiID* GetRmiIDList() PN_OVERRIDE { return g_RmiIDList; }
		virtual int GetRmiIDListCount() PN_OVERRIDE { return g_RmiIDListCount; }
	};

#ifdef SUPPORTS_CPP11 
	
	class StubFunctional : public Stub 
	{
	public:
               
		std::function< bool ( ::Proud::HostID, ::Proud::RmiContext& , const int  & ) > JoinTeam_Function;
		virtual bool JoinTeam ( ::Proud::HostID remote, ::Proud::RmiContext& rmiContext , const int  & team) 
		{ 
			if (JoinTeam_Function==nullptr) 
				return true; 
			return JoinTeam_Function(remote,rmiContext, team); 
		}

	};
#endif

}


